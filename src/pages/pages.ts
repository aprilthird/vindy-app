import { v4 as randomUUID } from "uuid";
import {
	Home as HomeIcon,
	Icon,
	PlusCircle as PlusIcon,
	ShoppingBag as ShoppingIcon,
	User as UserIcon,
	Search as SearchIcon,
	MapPin as MapIcon,
	Bell as BellIcon,
	Heart as HeartIcon,
	Settings as SettingsIcon,
	HelpCircle as HelpIcon,
	AlertCircle as AlertIcon,
	DollarSign as WalletIcon,
	PenTool as QAIcon,
	Award as ReviewIcon,
	BarChart2 as MetricIcon,
} from "react-feather";
import {
	PublicRoutes,
	PrivateInitRoutes,
	CategoriesRoutes,
	ShoppingRoutes,
	UserProfileRoutes,
	NotificationsRoutes,
	AddressesRoutes,
	FavoritesRoutes,
	SettingsRoutes,
	ServicesRoutes,
	RequestsRoutes,
	VinderProfileAPIRoutes,
	ChatsPageRoutes,
	WalletRoutes,
	ReviewRoutes,
	QARoutes,
	MetricRoutes,
} from "../utils";
import { DashboardPage } from "./Dashboars";
import { ForgotPasswordpage } from "./ForgotPassword";
import { LoginPage } from "./Login";
import { ProfilePage } from "./members/Profile";
import { RegisterPage } from "./Register";
import { ResetPasswordPage } from "./ResetPassword";
import { ShoppingPage } from "./shooping";
import { NotificationsPage } from "./Notifications";
import { AddressesPage } from "./addresses";
import { CategoriesPage } from "./categories";
import { FavoritesPage } from "./members/Favorites";
import { SettingsPage } from "./settings";
import { LegalPage } from "./Legal";
import { ReportsPage } from "./Report";
import { CategoryPage } from "./categories/[slug]";
import { AddServicePage } from "./services/add";
import { ServicesPage } from "./services";
import { RequestsPage } from "./requests";
import { VinderProfile } from "./vinders/VinderProfile";
import { VinderSlugPage } from "./vinders/[slug]";
import { ServicePage } from "./services/[slug]";
import { ChatPage } from "./chat";
import { ChatRoom } from "./chat/chatRoom";
import { ChangePasswordPage } from "./settings/change-password";
import { ReviewsPage } from "./reviews";
import { QAPage } from "./QA";
import { MetricsPage } from "./metrics";
import { WalletPage } from "./wallet";

export type Routes = {
	key: string;
	label: string;
	name: string;
	path: string;
	redirect: boolean;
	component?: any;
	isAuthenticated: boolean;
	icon?: Icon;
	hasTab?: boolean;
	mainSidebar?: boolean;
	showTabs?: boolean;
};

export const NoAuthPages: Routes[] = [
	{
		key: randomUUID(),
		label: "Login",
		name: "login",
		path: PublicRoutes.LOGIN,
		redirect: true,
		component: LoginPage,
		isAuthenticated: false,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "Register",
		name: "register",
		path: PublicRoutes.REGISTER,
		redirect: false,
		component: RegisterPage,
		isAuthenticated: false,
	},
	{
		key: randomUUID(),
		label: "Forgot Password",
		name: "forgot-pasword",
		path: PublicRoutes.FORGOT_PASSWORD,
		redirect: false,
		component: ForgotPasswordpage,
		isAuthenticated: false,
	},
	{
		key: randomUUID(),
		label: "Reset Password",
		name: "reset-password",
		path: PublicRoutes.RESET_PASSWORD,
		redirect: false,
		component: ResetPasswordPage,
		isAuthenticated: false,
	},
	{
		key: randomUUID(),
		label: "Chats page",
		name: "chats-page",
		path: ChatsPageRoutes.INDEX,
		redirect: false,
		component: ChatPage,
		isAuthenticated: false,
	},
	{
		key: randomUUID(),
		label: "Chats page",
		name: "chats-page",
		path: ChatsPageRoutes.INDEX,
		redirect: false,
		component: ChatPage,
		isAuthenticated: false,
	},
	{
		key: randomUUID(),
		label: "ChatRoom page",
		name: "chatRoom-page",
		path: ChatsPageRoutes.CHAT_ROOM,
		redirect: false,
		component: ChatRoom,
		isAuthenticated: false,
	},
];

export const AuthMemberRotes: Routes[] = [
	{
		key: randomUUID(),
		label: "Dasboard",
		name: "dashboard",
		path: PrivateInitRoutes.DASHBOARD,
		redirect: true,
		component: DashboardPage,
		isAuthenticated: true,
		icon: HomeIcon,
		hasTab: true,
	},
	{
		key: randomUUID(),
		label: "Categorias",
		name: "categories",
		path: CategoriesRoutes.INDEX,
		redirect: false,
		component: CategoriesPage,
		isAuthenticated: true,
		icon: SearchIcon,
		hasTab: true,
	},
	{
		key: randomUUID(),
		label: "Subcategorias",
		name: "subcategory",
		path: CategoriesRoutes.SLUG,
		redirect: false,
		component: CategoryPage,
		isAuthenticated: true,
		icon: SearchIcon,
		hasTab: false,
	},
	{
		key: randomUUID(),
		label: "Servicios",
		name: "services",
		path: ServicesRoutes.INDEX,
		redirect: false,
		component: ServicesPage,
		isAuthenticated: true,
		icon: SearchIcon,
		hasTab: false,
	},
	{
		key: randomUUID(),
		label: "Servicio",
		name: "service",
		path: ServicesRoutes.SLUG,
		redirect: false,
		component: ServicePage,
		isAuthenticated: true,
		// icon: ,
		hasTab: false,
	},
	{
		key: randomUUID(),
		label: "Perfil de vinder",
		name: "vinder profile",
		path: VinderProfileAPIRoutes.VINDER_PROFILE,
		redirect: false,
		component: VinderSlugPage,
		isAuthenticated: true,
		icon: SearchIcon,
		hasTab: false,
	},
	{
		key: randomUUID(),
		label: "Shopping",
		name: "shopping",
		path: ShoppingRoutes.INDEX,
		redirect: false,
		component: ShoppingPage,
		isAuthenticated: true,
		icon: ShoppingIcon,
		hasTab: true,
	},
	{
		key: randomUUID(),
		label: "Profile",
		name: "profile",
		path: UserProfileRoutes.SLUG,
		redirect: false,
		component: ProfilePage,
		isAuthenticated: true,
		icon: UserIcon,
		hasTab: true,
	},
	{
		key: randomUUID(),
		label: "Notificaciones",
		name: "notifications",
		path: NotificationsRoutes.INDEX,
		redirect: false,
		component: NotificationsPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: BellIcon,
	},
	{
		key: randomUUID(),
		label: "Direcciones",
		name: "addresses",
		path: AddressesRoutes.INDEX,
		redirect: false,
		component: AddressesPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: MapIcon,
	},
	{
		key: randomUUID(),
		label: "Favoritos",
		name: "favorites",
		path: FavoritesRoutes.INDEX,
		redirect: false,
		component: FavoritesPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: HeartIcon,
	},
	{
		key: randomUUID(),
		label: "Configuración",
		name: "settings",
		path: SettingsRoutes.INDEX,
		redirect: false,
		component: SettingsPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: SettingsIcon,
	},
	{
		key: randomUUID(),
		label: "reportar un problema",
		name: "report",
		path: PrivateInitRoutes.REPORT_PROBLEM,
		redirect: false,
		component: ReportsPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: HelpIcon,
	},
	{
		key: randomUUID(),
		label: "Información legal",
		name: "legal",
		path: PrivateInitRoutes.LEGAL_INFO,
		redirect: false,
		component: LegalPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: AlertIcon,
	},
];

export const AuthVinderRoutes: Routes[] = [
	{
		key: randomUUID(),
		label: "Dasboard",
		name: "dashboard",
		path: PrivateInitRoutes.DASHBOARD,
		redirect: true,
		component: DashboardPage,
		isAuthenticated: true,
		icon: HomeIcon,
		hasTab: true,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "Services",
		name: "services",
		path: ServicesRoutes.ADD,
		redirect: false,
		component: AddServicePage,
		isAuthenticated: true,
		icon: PlusIcon,
		hasTab: true,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "Mis solicitudes",
		name: "requests",
		path: RequestsRoutes.INDEX,
		redirect: false,
		component: RequestsPage,
		isAuthenticated: true,
		icon: ShoppingIcon,
		hasTab: true,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "Profile",
		name: "profile",
		path: VinderProfileAPIRoutes.INDEX,
		redirect: false,
		component: VinderProfile,
		isAuthenticated: true,
		icon: UserIcon,
		hasTab: true,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "Configuración",
		name: "settings",
		path: SettingsRoutes.INDEX,
		redirect: false,
		component: SettingsPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: SettingsIcon,
		showTabs: false,
	},
	{
		key: randomUUID(),
		label: "Cambiar contraseña",
		name: "changepassword",
		path: SettingsRoutes.CHANGE_PASSWORD,
		redirect: false,
		component: ChangePasswordPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: false,
		showTabs: false,
	},
	{
		key: randomUUID(),
		label: "Mi wallet",
		name: "wallet",
		path: WalletRoutes.INDEX,
		redirect: false,
		component: WalletPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: WalletIcon,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "Notificaciones",
		name: "notifications",
		path: NotificationsRoutes.INDEX,
		redirect: false,
		component: NotificationsPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: BellIcon,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "Preguntas y Respuestas",
		name: "qa",
		path: QARoutes.INDEX,
		redirect: false,
		component: QAPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: QAIcon,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "Reseñas",
		name: "reviews",
		path: ReviewRoutes.INDEX,
		redirect: false,
		component: ReviewsPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: ReviewIcon,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "Metricas",
		name: "metricss",
		path: MetricRoutes.INDEX,
		redirect: false,
		component: MetricsPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: MetricIcon,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "reportar un problema",
		name: "report",
		path: PrivateInitRoutes.REPORT_PROBLEM,
		redirect: false,
		component: ReportsPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: HelpIcon,
		showTabs: true,
	},
	{
		key: randomUUID(),
		label: "Información legal",
		name: "legal",
		path: PrivateInitRoutes.LEGAL_INFO,
		redirect: false,
		component: LegalPage,
		isAuthenticated: true,
		hasTab: false,
		mainSidebar: true,
		icon: AlertIcon,
		showTabs: true,
	},
];
